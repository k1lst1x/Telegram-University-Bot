import logging
from aiogram import Bot, Dispatcher, types
import g4f
from aiogram.utils import executor
import re

def clean_markdown(text):
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ #### ‚Üí **–ñ–∏—Ä–Ω—ã–π**
    text = re.sub(r'####\s*(.+)', r'*\1*', text)
    
    # –°–Ω–æ—Å–∫–∏ —Ç–∏–ø–∞ [[1]](url) ‚Üí –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏—Ç—å
    text = re.sub(r'\[\[[^\]]+]]\([^)]+\)', '', text)
    
    # –£–¥–∞–ª–∏—Ç—å –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    text = text.strip()
    
    return text

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
API_TOKEN = '6704850793:AAG1qXpkSDwv0pDUlCyEyP1PSGUjKFyIJiU'

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
conversation_history = {}

# üìå –°—é–¥–∞ –≤—Å—Ç–∞–≤–ª—è–µ—à—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –í–£–ó
SYSTEM_PROMPT = {
    "role": "system",
    "content": (
        "–¢—ã –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –≤—É–∑–µ.\n\n"
        "–ù–∞–∑–≤–∞–Ω–∏–µ –≤—É–∑–∞: –ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ –∏ —Å–≤—è–∑–∏ –∏–º–µ–Ω–∏ –ì—É–º–∞—Ä–±–µ–∫–∞ –î–∞—É–∫–µ–µ–≤–∞ (–ê–£–≠–°), —Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–∫ Energo University.\n\n"
        "–ê–¥—Ä–µ—Å: –≥. –ê–ª–º–∞—Ç—ã, —É–ª–∏—Ü–∞ –ë–∞–π—Ç—É—Ä—Å—ã–Ω“±–ª—ã 126/1, –∏–Ω–¥–µ–∫—Å 050013.\n\n"
        "–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞: https://energo.university/\n"
        "–ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è: https://energo.university/admission-committee/\n"
        "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã: https://energo.university/education_programs/\n"
        "–í–∏–¥–µ–æ-—Ç—É—Ä –ø–æ –∫–∞–º–ø—É—Å—É: https://youtu.be/zcKQ_dRyKVs\n\n"
        "–ê–£–≠–° ‚Äî –æ–¥–∏–Ω –∏–∑ –≤–µ–¥—É—â–∏—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –≤—É–∑–æ–≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –≥–æ—Ç–æ–≤–∏—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π, –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏. "
        "–ë–æ–ª–µ–µ 90% —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –æ–±—É—á–∞—é—Ç—Å—è –Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≥—Ä–∞–Ω—Ç–∞—Ö. –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ –∏ —É—á–µ–±–Ω—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ —Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π: Siemens, Schneider Electric, Huawei, Ordamed –∏ –¥—Ä.\n\n"
        "–ò–∑–≤–µ—Å—Ç–Ω—ã–µ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ —Å—Ç—Ä–∞–Ω—ã ‚Äî –≤—ã–ø—É—Å–∫–Ω–∏–∫–∏ –ê–£–≠–°.\n\n"
        "–ö–æ–Ω—Ç–∞–∫—Ç—ã:\n"
        "‚úâÔ∏è Email: aues@aues.kz | info@aues.kz\n"
        "üìû Call-—Ü–µ–Ω—Ç—Ä: –ü–Ω‚Äì–ü—Ç —Å 9:00 –¥–æ 18:00 ‚Äî +7 (727) 323-11-75\n\n"
        "–û—Ç–≤–µ—á–∞–π –≤–µ–∂–ª–∏–≤–æ, –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—É, –≤–µ–∂–ª–∏–≤–æ —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º."
    )
}

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–µ–∑–∫–∏ –¥–ª–∏–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏
def trim_history(history, max_length=4096):
    current_length = sum(len(msg["content"]) for msg in history)
    while history and current_length > max_length:
        removed = history.pop(1)  # –Ω–µ —É–¥–∞–ª—è–µ–º system prompt
        current_length -= len(removed["content"])
    return history

# /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    user_id = message.from_user.id
    # –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ ‚Äî —á–∏—Å—Ç–∏–º –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –±—ã–ª —Å–≤–µ–∂–∏–π –¥–∏–∞–ª–æ–≥
    conversation_history[user_id] = [SYSTEM_PROMPT.copy()]
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ–± –ê–ª–º–∞—Ç–∏–Ω—Å–∫–æ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ –∏ —Å–≤—è–∑–∏ (–ê–£–≠–° / Energo University).\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏, –æ–±—É—á–µ–Ω–∏–∏, —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞—Ö, –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –∏ –∂–∏–∑–Ω–∏ –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ. "
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å!\n\n"
        "‚ÑπÔ∏è –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ /help."
    )
    await message.answer(text)

# /help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∫–æ—Ä–æ—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
@dp.message_handler(commands=['help'])
async def send_help(message: types.Message):
    text = (
        "‚ÑπÔ∏è <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:</b>\n\n"
        "/start ‚Äî –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å–Ω–∞—á–∞–ª–∞\n"
        "/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/clear ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n\n"
        "‚ùì –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø—Ä–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç ‚Äî –∏ –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç!"
    )
    await message.answer(text, parse_mode="HTML")

# –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ
@dp.message_handler(commands=['clear'])
async def clear_conversation(message: types.Message):
    user_id = message.from_user.id
    conversation_history[user_id] = [SYSTEM_PROMPT.copy()]
    await message.reply("–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message_handler()
async def handle_message(message: types.Message):
    user_id = message.from_user.id
    user_input = message.text

    if user_id not in conversation_history:
        # –ù–∞—á–∏–Ω–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
        conversation_history[user_id] = [SYSTEM_PROMPT.copy()]

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å
    conversation_history[user_id].append({"role": "user", "content": user_input})
    conversation_history[user_id] = trim_history(conversation_history[user_id])

    try:
        response = await g4f.ChatCompletion.create_async(
            model=g4f.models.default,
            messages=conversation_history[user_id],
            provider=g4f.Provider.You,
        )
        reply = response
    except Exception as e:
        print("–û—à–∏–±–∫–∞:", e)
        reply = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞."

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
    conversation_history[user_id].append({"role": "assistant", "content": reply})
    cleaned_reply = clean_markdown(reply)

    try:
        await message.answer(cleaned_reply, parse_mode="Markdown")
    except Exception as e:
        # Fallback –Ω–∞ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ Markdown –ª–æ–º–∞–µ—Ç—Å—è
        print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Markdown:", e)
        await message.answer(reply)

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
